[{"/Users/zuzu/Documents/GitHub/frog_tech_trend/src/index.js":"1","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/reportWebVitals.js":"2","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/App.js":"3","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/global.js":"4","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/trendItem.js":"5","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/Tagbutton.js":"6"},{"size":500,"mtime":1611479922914,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611479922948,"results":"9","hashOfConfig":"8"},{"size":16887,"mtime":1611479922911,"results":"10","hashOfConfig":"8"},{"size":591,"mtime":1611479922914,"results":"11","hashOfConfig":"8"},{"size":4338,"mtime":1611479922914,"results":"12","hashOfConfig":"8"},{"size":10388,"mtime":1611479922913,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gx4vgk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/zuzu/Documents/GitHub/frog_tech_trend/src/index.js",[],["31","32"],"/Users/zuzu/Documents/GitHub/frog_tech_trend/src/reportWebVitals.js",[],"/Users/zuzu/Documents/GitHub/frog_tech_trend/src/App.js",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55"],"/**\n *2020\n *yi\n *\n */\n\n\nimport React, { useRef,Component } from 'react';\nimport './components/global'\nimport './App.css';\nimport Tagbutton from \"./components/Tagbutton\";\nimport TrendItem from \"./components/trendItem\";\nimport closepng from \"./asset/close.png\"\nimport titlepng from \"./asset/title-1.png\"\n\nconst rootRef = React.createRef();\n\n\n\nclass App extends React.Component {\n\n  constructor(dispatch,props){\n    super(dispatch,props)\n    this.state ={\n      initall:0,\n      winW:'100%',\n      winH:'100%',\n      categoryblockH:0,\n      treadData:[],\n      themeData:[],\n      category: ['传感未来','大数据','环境为本','区块链','人工智能','生活方式','生物科技','未来机会','未来技术','虚拟现实','重置'],\n      choosecategory:{'传感未来':0,'大数据':0,'环境为本':0,'区块链':0,'人工智能':0,'生活方式':0,'生物科技':0,'未来机会':0,'未来技术':0,'虚拟现实':0,'重置':0},\n      tempchoose:[0,0,0,0,0,0,0,0,0,0,0],\n     // theme:['行','建筑','健康','教育','金融','其他','人机交互','人文艺术','设计','食','消费','信息安全','衣','医疗','以人为本','职场','自动化'],\n     // themeicon:['./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png','./images/ai3.png'],\n      theme:['行','建筑','健康','教育','金融','其他','人机交互','人文艺术','设计','食','消费','信息安全','衣','医疗','以人为本','职场','自动化','社交'],\n      themeicon:['./images/icon1.png','./images/icon2.png','./images/icon3.png','./images/icon4.png','./images/icon5.png','./images/icon6.png','./images/icon7.png','./images/icon8.png','./images/icon9.png','./images/icon10.png','./images/icon11.png','./images/icon12.png','./images/icon13.png','./images/icon14.png','./images/icon15.png','./images/icon16.png','./images/icon17.png','./images/icon18.png'],\n      showthemeData:[],\n      showpopup:'hidden',\n      popupalpha:0,\n      popupheioght:'30%',\n      isFullScreen:false,\n        contentTop:'100px',\n\n    }\n\n\n    this.handleresize =this.handleresize.bind(this)\n    this.settle_Data =this.settle_Data.bind(this)\n    this.click_event =this.click_event.bind(this)\n      this.closepopup =this.closepopup.bind(this)\n\n\n\n  }\n\n  componentDidMount() {\n      let newcategoryblockH = document.getElementById(\"categoryview\")\n      if(window.innerWidth<500){\n          newcategoryblockH=newcategoryblockH.clientHeight\n      }else {\n          newcategoryblockH=0\n      }\n\n      let _contentTop=100\n\n      console.log(document.getElementById(\"categoryview\").clientHeight)\n\n     _contentTop=(window.innerHeight-700)/2\n      this.setState({\n          categoryblockH:newcategoryblockH,\n          contentTop:_contentTop,\n      })\n\n      document.addEventListener(\"keydown\", this.onKeyDown)\n\n\n  }\n\n    onKeyDown = (e) => {\n\n        switch( e.keyCode) {\n            case 70://回车事件\n                //alert(e.keyCode)\n                this.fullScreen()\n                break\n        }\n    }\n\n\n\n    fullScreen = () => {\n        if (!this.state.isFullScreen) {\n            try {\n                rootRef.current.requestFullscreen();\n            }catch{\n                console.log('not support')\n            }\n        }\n    }\n\n\n    exitFullScreen = () => {\n        document.exitFullscreen();\n    }\n\n\n\n  handleresize(){\n\n      let newcategoryblockH = document.getElementById(\"categoryview\")\n\n      if(window.innerWidth<500){\n          newcategoryblockH=newcategoryblockH.clientHeight\n      }else {\n          newcategoryblockH=0\n      }\n\n    this.setState({\n      winW:window.innerWidth,\n      winH:window.innerHeight,\n      categoryblockH:newcategoryblockH,\n    },()=>{\n      this.settle_Data(this.state.tempchoose)\n    })\n     console.log(newcategoryblockH)\n\n\n      // 全屏\n      if (document.fullscreenElement) {\n          this.setState({ isFullScreen: true });\n      }\n      // 不是全屏\n      else {\n          this.setState({ isFullScreen: false });\n      }\n\n\n  }\n\n  componentWillMount() {\n\n    window.addEventListener('resize', this.handleresize);\n\n\n\n\n\n\n\n      fetch('./trend.json', {\n         method: \"GET\",\n         headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         },\n         })\n          .then(response => response.json())//Promise\n          .then(data => {\n\n            this.setState({\n              treadData: data.data,\n              winW:window.innerWidth,\n              winH:window.innerHeight,\n\n            },()=>{\n\n              this.settle_Data(this.state.tempchoose)\n\n            })\n\n\n        })\n\n\n\n  }\n\n\n  componentDidUpdate(){\n\n  }\n\n  //close component\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.handleresize)\n  }\n\n\n  //props update\n  componentWillReceiveProps(){\n\n  }\n\n  settle_Data(tempchoose){\n\n    let show_item_num=7\n    let item_top_space=120\n    let item_w = 860 / show_item_num\n    let left_pos = (this.state.winW - (item_w + 30) * show_item_num) / 2\n    let newtempData = []\n    let item_top =  item_top_space+this.state.categoryblockH\n\n\n\n      let item_left = left_pos\n    let i = 1\n    let newthemeData=[]\n\n\n\n\n\n      //Set theme icon\n      this.state.theme.map((item, key) => {\n\n          if (key % show_item_num == 0) {\n              i = 1\n              item_top += item_w + 60\n              item_left = left_pos\n          } else {\n              item_left = left_pos + i * (item_w + 40)\n              i += 1\n          }\n\n          const newthemeicon = {\n              index: key,\n              theme: item,\n              left: item_left,\n              top: item_top,\n              width: item_w,\n              visible: 'visible',\n          }\n\n          newthemeData.push(newthemeicon)\n\n      })\n\n\n\n\n\n\n      //If checked trend button\n       let tempchoosetrend=[]\n\n       for(let i=0;i<tempchoose.length;i++){\n         if(tempchoose[i]==1){\n           tempchoosetrend.push(this.state.category[i])\n         }\n       }\n\n\n      if(tempchoosetrend.length>0) {\n\n        let temptheme=[]\n        let k=0\n            i=0\n            item_top=item_top_space+this.state.categoryblockH\n\n\n        this.state.treadData.map((item, key) => {\n           if(tempchoosetrend.includes(item.category)) {\n              temptheme.push(item.themeicon)\n           }\n        })\n\n\n          temptheme=Array.from(new Set(temptheme))\n\n         if(temptheme.length<show_item_num)left_pos = (this.state.winW - (item_w + 20) * temptheme.length) / 2\n\n\n          let newtempthemeData=this.state.themeData\n          this.state.theme.map((themeitem, key) => {\n\n\n              if (temptheme.includes(themeitem)) {\n\n                  if (k % show_item_num == 0) {\n                      i = 1\n                      item_top += item_w + 60\n                      item_left = left_pos\n                  } else {\n                      item_left = left_pos + i * (item_w + 40)\n                      i += 1\n                  }\n                  k += 1\n\n                  newtempthemeData[key]={\n                      index: key,\n                      theme: themeitem,\n                      left: item_left,\n                      top: item_top,\n                      width: item_w,\n                      visible: 'visible',\n                  }\n\n              }else{\n\n                  newtempthemeData[key]={\n                      index: key,\n                      theme: themeitem,\n                      left: (this.state.winW-item_w)/2,\n                      top: this.state.winH,\n                      width: item_w,\n                      visible: 'hidden',\n                  }\n\n              }\n\n          })\n\n\n           this.setState({\n               initall: 0,\n           },()=>{\n               this.setState({themeData:newtempthemeData})\n           })\n\n\n\n     }else{\n\n          this.setState({\n              initall: 1,\n              themeData:newthemeData,\n          },()=>{\n              this.setState({themeData:newthemeData})\n          })\n\n      }\n\n\n    }\n\n\n\n\n  click_event(tag){\n\n\n    if(tag=='重置'){\n       let renewtempchoose=[0,0,0,0,0,0,0,0,0,0,0]\n       let newchoosecat=this.state.choosecategory\n       for(var i=0;i<this.state.tempchoose.length;i++){\n         if(this.state.tempchoose[i]==1){\n           newchoosecat[this.state.category[i]]=0\n         }\n       }\n\n          this.setState({\n            tempchoose:renewtempchoose,\n            choosecategory:newchoosecat,\n          },()=>{\n           // console.log(newchoosecat)\n            this.settle_Data(renewtempchoose)\n\n          })\n\n\n\n      return\n    }\n\n    let newchoosecat=this.state.choosecategory\n\n    if(newchoosecat[tag]==1){\n      newchoosecat[tag]=0\n\n    }else{\n      newchoosecat[tag]=1\n    }\n\n\n    this.setState({\n      choosecategory:newchoosecat\n    },()=>{\n      let newtempchoose=this.state.tempchoose\n      for(let i=0;i<this.state.category.length;i++){\n        if(this.state.category[i]==tag){\n          (newtempchoose[i]==1)?(newtempchoose[i]=0):(newtempchoose[i]=1)\n\n        }\n      }\n\n      this.setState({\n        tempchoose:newtempchoose\n      },()=>{\n        //console.log(newtempchoose)\n        this.settle_Data(newtempchoose)\n\n      })\n\n    })\n\n  }\n\n\n  onRef = (ref) => {\n    this.child = ref\n  }\n\n\n  item_click_event(picktheme){\n\n\n      let tempchoosetrend=[]\n      let popupData=[]\n      for(let i=0;i<this.state.tempchoose.length;i++){\n          if(this.state.tempchoose[i]==1){\n              tempchoosetrend.push(this.state.category[i])\n          }\n      }\n\n\n          this.state.treadData.map((item, key) => {\n              if(tempchoosetrend.length>0) {\n                 if(tempchoosetrend.includes(item.category)) {\n                    if(item.themeicon==picktheme){\n                        item.displayyear='yes'\n                        popupData.push(item)\n                    }\n                 }\n              }else{\n                    if(item.themeicon==picktheme){\n                        item.displayyear='yes'\n                        popupData.push(item)\n                   }\n              }\n          })\n\n      //sort year 2015-2020\n      let sortpopupData=this.bubblesort(popupData)\n\n      console.log(sortpopupData.length)\n      let newpopupheioght=sortpopupData.length*140\n      //if(window.innerWidth<1000)newpopupheioght=sortpopupData.length*window.innerWidth/2\n      newpopupheioght='auto'\n      this.setState({\n          showthemeData:sortpopupData,\n          popupheioght:newpopupheioght\n      },()=>{\n         // console.log(this.state.showthemeData)\n          this.setState({\n              showpopup:'visible',\n              popupalpha:1,\n          })\n\n\n      })\n\n\n  }\n\n    bubblesort(arr){\n        let len = arr.length;\n        for( let i = 0; i < len; i ++){\n            for( let j = 0; j < len - i - 1; j ++){\n                if(arr[j].year > arr[j + 1].year) {\n                    let temp = arr[j];\n                    arr[j] = arr[j+1];\n                    arr[j+1] = temp;\n\n                }else if(arr[j].year == arr[j + 1].year){\n\n                    arr[j + 1].displayyear +='no'\n\n                }\n            }\n        }\n        return arr;\n    }\n\n\n\n    closepopup(){\n          this.setState({\n              showpopup:'hidden',\n              popupheioght:'5%',\n              popupalpha:0,\n          })\n\n    }\n\n\n\n\n\n\n  render(){\n\n\n    return(\n\n        <div  className='contentView' ref={rootRef} >\n\n          <div className='viewbg'>\n              <video src=\"./media/WorkReel_BG.mp4\" autoPlay=\"autoPlay\" loop=\"loop\"  muted=\"muted\"  style={{width:'120%',height:'100%',paddingLeft:0,left:0}} >\n\n              </video>\n\n          </div>\n\n          <div style={{position:'absolute',backgroundColor:'',width:'100%',top:this.state.contentTop}}>\n          <div className='Topheadline'>\n          </div>\n          <div className='Subheadline'>\n           <img src={titlepng}    width={'980'} />\n          </div>\n\n          <div className='Centerblock' id='categoryview'>\n            <div style={{maxWidth:'80%',width:'980px',height:'audo',display:'flex',justifyContent: 'space-between',paddingBottom:0,backgroundColor:''}}>\n\n              <Tagbutton ButtonName={'传感未来'} checked={this.state.choosecategory['传感未来']} bgcolor={'#BFDDE2'} action={this.click_event}/>\n              <Tagbutton ButtonName={'大数据'} checked={this.state.choosecategory['大数据']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'环境为本'} checked={this.state.choosecategory['环境为本']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'区块链'} checked={this.state.choosecategory['区块链']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'人工智能'} checked={this.state.choosecategory['人工智能']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'生活方式'} checked={this.state.choosecategory['生活方式']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'生物科技'} checked={this.state.choosecategory['生物科技']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'未来机会'} checked={this.state.choosecategory['未来机会']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'未来技术'} checked={this.state.choosecategory['未来技术']} bgcolor={'#BFDDE2'} action={this.click_event} />\n              <Tagbutton ButtonName={'虚拟现实'} checked={this.state.choosecategory['虚拟现实']} bgcolor={'#BFDDE2'} action={this.click_event} />\n\n\n\n            </div>\n          </div>\n\n          <div className='Centerblock'>\n            <div style={{maxWidth:'80%',width:'860',height:'audo',paddingBottom:0,backgroundColor:'#666'}}>\n\n              {\n\n                this.state.themeData.map((item, key) => {\n\n\n                    return (\n\n                        <TrendItem  onRef={this.onRef}  key={key} itemid={item.index} itemTitle={item.theme} action={this.item_click_event.bind(this)} icon={this.state.themeicon[key]} itemW={item.width} visible={item.visible} left={item.left} top={item.top}/>\n                    )\n\n                })\n              }\n\n\n          </div>\n\n          </div>\n          </div>\n\n            <div className='popupView' style={{visibility:this.state.showpopup,transition:'0.15s ease-out all',opacity:this.state.popupalpha}}>\n                <div className='popupViewbg' onClick={()=>{this.closepopup() }}>\n                </div>\n                <div className='popupcontent' style={{transition:'0.25s ease-out all',height:this.state.popupheioght}}>\n                    <div style={{width:'100%',height:'40px',textAlign:'right'}}>\n                        <img src={closepng}  style={{paddingRight:12,paddingTop:12}}   width={'40vh'} onClick={()=>{this.closepopup() }} />\n                    </div>\n                    <div className='scrollcontent' >\n\n                        {\n                            this.state.showthemeData.map((item, key) => {\n                                return(\n                                    <div key={key} className='Linerblock' style={{  paddingBottom:20,paddingTop:10}}>\n                                           <div key={key} className='Centerblock'  >\n\n                                                <div className='themeyear'>\n                                                    <div className='textunselect'>\n                                                     {(item.displayyear==\"yes\")?(item.year):('')}\n                                                    </div>\n                                                </div>\n                                                <div className='themetext'>\n                                                    <div className='textunselect'>\n                                                     {item.headline}\n                                                    </div>\n                                                </div>\n\n                                           </div>\n\n                                            <div   className='Centerblock' style={{height:1}} >\n\n                                            </div>\n                                        </div>\n\n\n                                )\n                            })\n                        }\n\n\n\n                    </div>\n\n\n\n                </div>\n\n            </div>\n\n            <div className='resetbutton' >\n                <Tagbutton ButtonName={'重置'} checked={this.state.choosecategory['重置']} bgcolor={'#fff1c1'} action={this.click_event} />\n\n            </div>\n\n        </div>\n    )\n\n  }\n\n}\n\n\n\n\nexport default App;","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/global.js",["56"],"import React  from 'react';\n\n\nconst winW=window.innerWidth\nconst winH=window.innerHeight;\nconst userAgent = navigator.userAgent;\n\n\nglobal.gData={\n    version:'0.3.2',\n    user_name:'',\n    screenH:winH,\n    screenW:winW,\n    user_id:'',\n    accToken:'',\n    refToken:'',\n    acc_token_life:900,\n    ref_token_life:864000,\n    cdn_domain:'',\n    api_domain:'',\n    focus_uid:0,\n    isMobile:userAgent.match(/(iPhone|iPod|Android|ios|iPad|AppleWebKit.*Mobile.*)/i)\n\n}\n\n\nglobal.trend = [\n     {\n        name:\"name1\"\n    },\n    {\n        name:\"name1\"\n    },\n    {\n        name:\"name1\"\n    },\n]\n\n","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/trendItem.js",["57"],"\n\nimport React from 'react';\n\n\nclass trendItem extends React.Component{\n\n\n\n\n    constructor(){\n        super()\n        this.state ={\n            initial:1,\n            itemid:'',\n            itemContent:{\n                transition:'0.15s ease-out all',\n                width:'auto',\n                height:'auto',\n                borderStyle: 'solid',\n                borderWidth: '0px',\n                borderColor:'#000',\n                backgroundColor:'',\n                borderRadius: '6px',\n                color:'#000',\n                textAlign: 'center',\n                display:'flex',\n                cursor: 'pointer',\n                justifyContent: 'center',\n                marginRight:20,\n                marginTop:10,\n                left:0,\n                top:0,\n                position:'absolute',\n                visibility:'hidden',\n\n            }\n        }\n\n        this.changevalue =this.changevalue.bind(this)\n\n    }\n\n    changevalue(){\n\n        this.setState(prevState=>{\n            return{\n                initial:prevState.initial +1\n            }\n        })\n    }\n\n    componentWillMount() {\n\n        this.props.onRef(this)\n\n        if(this.props.itemW){\n            const itemW=this.props.itemW\n            this.setState({\n                itemContent:{\n                    transition:'0.15s ease-out all',\n                    width:itemW,\n                    height:'auto',\n                    borderStyle: 'solid',\n                    borderWidth: '0px',\n                    backgroundColor:'',\n                    borderColor:'#000',\n                    borderRadius: '6px',\n                    color:'#000',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:10,\n                    marginTop:10,\n                    left:this.props.left,\n                    top:this.props.top,\n                    position:'absolute',\n                    visibility:this.props.visible,\n\n                },\n                itemid:this.props.itemid,\n\n            })\n\n\n        }\n\n    }\n\n\n    mouseEnter(event) {\n\n\n    }\n\n    mouseOut(event) {\n\n\n    }\n\n    mouseDown(event){\n        this.props.action(this.props.itemTitle)\n    }\n\n    componentDidUpdate() {\n\n\n    }\n\n    //props update\n    componentWillReceiveProps(){\n       // console.log('props update'+this.props.left)\n        if(this.props.itemW || this.props.left || this.props.top){\n            const itemW=this.props.itemW\n            this.setState({\n                itemContent:{\n                    transition:'0.15s ease-out all',\n                    width:itemW,\n                    height:'auto',\n                    borderStyle: 'solid',\n                    borderWidth: '0px',\n                    backgroundColor:'',\n                    borderColor:'#000',\n                    borderRadius: '6px',\n                    color:'#000',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:10,\n                    marginTop:10,\n                    left:this.props.left,\n                    top:this.props.top,\n                    position:'absolute',\n                    visibility:this.props.visible,\n\n                },\n\n            })\n        }\n    }\n\n    myPos = (Posdata) => {\n\n\n\n\n    }\n\n    render(){\n\n        const styles={\n\n            buttonInfo:{\n\n                alignItems: 'center',\n                display: 'flex',\n                fontSize:'17px',\n                justifyContent: 'center',\n                verticalAlign:'center',\n                textAlign:'center',\n                width:'100%',\n                color:'#fff',\n                fontWeight:'bold',\n                height:'auto',\n                marginTop:6\n\n\n\n            }\n\n        }\n\n        return(\n            <div style={this.state.itemContent} onClick={()=>{this.mouseDown() }} >\n                <div  style={{width:'100%'}} >\n\n                <img src={this.props.icon}  width={'100%'}/>\n\n                <div style={styles.buttonInfo}>\n                    {this.props.itemTitle}\n                </div>\n\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\n\n\nexport default trendItem","/Users/zuzu/Documents/GitHub/frog_tech_trend/src/components/Tagbutton.js",["58","59","60","61","62","63","64"],"\n\nimport React from 'react';\n\n\nclass Tagbutton extends React.Component{\n\n\n\n\n    constructor(){\n        super()\n        this.state ={\n            initial:1,\n            buttonW:0,\n            clicked:0,\n            buttonname:'',\n            buttonInfo:{\n                alignItems: 'center',\n                display: 'flex',\n                fontSize:'14px',\n                justifyContent: 'center',\n                verticalAlign:'center',\n                textAlign:'center',\n                width:'auto',\n                color:'#fff',\n                fontWeight:'bold',\n                height:'45px',\n                position:'absolute',\n            },\n            buttonContent:{\n                transition:'0.15s ease-out all',\n                width:'auto',\n                height:'45px',\n                borderStyle: 'solid',\n                borderWidth: '1px',\n                borderColor:'',\n                borderRadius: '6px',\n                color:'',\n                overflow: 'hidden',\n                textAlign: 'center',\n                display:'flex',\n                cursor: 'pointer',\n                justifyContent: 'center',\n                marginRight:20,\n                marginTop:6,\n                float:'left',\n            },\n            buttoninsidebg:{\n                transition:'0.15s ease-out all',\n                width:'100%',\n                height:'45px',\n                float:'left',\n                backgroundColor:'#999',\n            },\n        }\n\n        this.changevalue =this.changevalue.bind(this)\n\n    }\n\n    changevalue(){\n\n        this.setState(prevState=>{\n            return{\n                initial:prevState.initial +1\n            }\n        })\n    }\n\n    componentWillMount() {\n        let bgc='#999'\n        let fontcolor = '#fff'\n        if(this.props.checked==1){\n            bgc=this.props.bgcolor\n            fontcolor = \"#000\"\n        }else{\n            bgc=''\n            fontcolor = '#fff'\n        }\n\n        if(this.props.ButtonName){\n            const btnW=this.props.ButtonName.length*20\n            this.setState({\n                buttonname:this.props.ButtonName,\n                buttonContent:{\n                    transition:'0.15s ease-out all',\n                    width:btnW,\n                    height:'45px',\n                    borderStyle: 'solid',\n                    borderWidth: '1px',\n                    borderColor:'#fff',\n                    borderRadius: '6px',\n                    color:'#fff',\n                    overflow: 'hidden',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:0,\n                    marginTop:6,\n                    float:'left',\n                },\n                buttoninsidebg:{\n                    transition:'0.15s ease-out all',\n                    width:'100%',\n                    height:'45px',\n                    float:'left',\n                    backgroundColor:'',\n                },\n\n                buttonInfo:{\n                alignItems: 'center',\n                display: 'flex',\n                fontSize:'14px',\n                justifyContent: 'center',\n                verticalAlign:'center',\n                textAlign:'center',\n                width:'auto',\n                color:fontcolor,\n                fontWeight:'bold',\n                height:'45px',\n                position:'absolute',\n            },\n            })\n        }\n\n    }\n\n    componentWillReceiveProps(){\n\n        this.state.clicked=this.props.checked\n\n        let bgc='#999'\n        let fontcolor = '#fff'\n        if(this.props.checked==1){\n            bgc=this.props.bgcolor\n            fontcolor='#000'\n        }else{\n            bgc=''\n            fontcolor='#fff'\n        }\n        this.setState({\n                buttoninsidebg:{\n                    transition:'0.15s ease-out all',\n                    width:'100%',\n                    height:'45px',\n                    float:'left',\n                    backgroundColor:bgc,\n                },\n\n                buttonContent:{\n                    transition:'0.15s ease-out all',\n                    width:this.props.ButtonName.length*20,\n                    height:'45px',\n                    borderStyle: 'solid',\n                    borderWidth: '1px',\n                    borderColor: bgc,\n                    borderRadius: '6px',\n                    color:'#fff',\n                    overflow: 'hidden',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:0,\n                    marginTop:6,\n                    float:'left',\n                },\n\n                buttonInfo:{\n                alignItems: 'center',\n                display: 'flex',\n                fontSize:'14px',\n                justifyContent: 'center',\n                verticalAlign:'center',\n                textAlign:'center',\n                width:'auto',\n                color:fontcolor,\n                fontWeight:'bold',\n                height:'45px',\n                position:'absolute',\n            },\n\n            }\n        )\n\n\n    }\n\n\n    mouseEnter(event) {\n\n        let bgc='#999'\n        if(this.props.checked==1){\n            bgc=this.props.bgcolor\n        }else{\n            bgc=''\n        }\n\n        this.setState({\n\n            buttoninsidebg:{\n                transition:'0.15s ease-out all',\n                width:'100%',\n                height:'45px',\n                float:'left',\n                backgroundColor:bgc,\n            },\n\n            buttonContent:{\n                    transition:'0.15s ease-out all',\n                    width:this.props.ButtonName.length*20,\n                    height:'45px',\n                    borderStyle: 'solid',\n                    borderWidth: '1px',\n                    borderColor:bgc,\n                    borderRadius: '6px',\n                    color:'#fff',\n                    overflow: 'hidden',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:0,\n                    marginTop:6,\n                    float:'left',\n                },\n\n\n            }\n        )\n\n    }\n\n    mouseOut(event) {\n        let bgc='#999'\n        if(this.props.checked==1){\n            bgc=this.props.bgcolor\n        }else{\n            bgc=''\n        }\n        this.setState({\n            buttoninsidebg:{\n                transition:'0.15s ease-out all',\n                width:'100%',\n                height:'45px',\n                float:'left',\n                backgroundColor:bgc,\n            },\n\n            buttonContent:{\n                    transition:'0.15s ease-out all',\n                    width:this.props.ButtonName.length*20,\n                    height:'45px',\n                    borderStyle: 'solid',\n                    borderWidth: '1px',\n                    borderColor:bgc,\n                    borderRadius: '6px',\n                    color:'#fff',\n                    overflow: 'hidden',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:0,\n                    marginTop:6,\n                    float:'left',\n                },\n\n\n            }\n        )\n    }\n\n    mouseDown(event){\n\n\n        let bgc='#999'\n        let fontcolor = '#fff'\n        if( this.state.clicked==0){\n          this.setState({clicked:1})\n            bgc=this.props.bgcolor\n            fontcolor='#000'\n        }else{\n            this.setState({clicked:0})\n            bgc=''\n            fontcolor='#fff'\n        }\n\n        this.setState({\n                buttoninsidebg:{\n                    transition:'0.15s ease-out all',\n                    width:'100%',\n                    height:'45px',\n                    float:'left',\n                    backgroundColor:bgc,\n                },\n\n                buttonContent:{\n                    transition:'0.15s ease-out all',\n                    width:this.props.ButtonName.length*20,\n                    height:'45px',\n                    borderStyle: 'solid',\n                    borderWidth: '1px',\n                    borderColor:bgc,\n                    borderRadius: '6px',\n                    color:'#fff',\n                    overflow: 'hidden',\n                    textAlign: 'center',\n                    display:'flex',\n                    cursor: 'pointer',\n                    justifyContent: 'center',\n                    marginRight:20,\n                    marginTop:6,\n                    float:'left',\n                },\n\n                buttonInfo:{\n                alignItems: 'center',\n                display: 'flex',\n                fontSize:'14px',\n                justifyContent: 'center',\n                verticalAlign:'center',\n                textAlign:'center',\n                width:'auto',\n                color:fontcolor,\n                fontWeight:'bold',\n                height:'45px',\n                position:'absolute',\n            },\n\n            }\n        )\n\n        this.props.action(this.props.ButtonName)\n\n    }\n\n    render(){\n\n        // const styles={\n\n        //     buttonInfo:{\n\n        //         alignItems: 'center',\n        //         display: 'flex',\n        //         fontSize:'14px',\n        //         justifyContent: 'center',\n        //         verticalAlign:'center',\n        //         textAlign:'center',\n        //         width:'auto',\n        //         color:'#000',\n        //         fontWeight:'bold',\n        //         height:'45px',\n        //         position:'absolute',\n        //     }\n\n        // }\n\n        return(\n            <div style={this.state.buttonContent} onClick={()=>{this.mouseDown() }}  onMouseEnter={()=>{this.mouseEnter() }}  onMouseLeave={()=>{this.mouseOut() }}>\n\n                <div  style={this.state.buttoninsidebg} >\n\n                </div>\n                <div style={this.state.buttonInfo} >\n                    <div className='textunselect'>\n                      {this.state.buttonname}\n                    </div>\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\n\n\nexport default Tagbutton",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":17,"nodeType":"71","messageId":"72","endLine":8,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":8,"column":24,"nodeType":"71","messageId":"72","endLine":8,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":82,"column":9,"nodeType":"76","messageId":"77","endLine":87,"endColumn":10},{"ruleId":"69","severity":1,"message":"78","line":201,"column":9,"nodeType":"71","messageId":"72","endLine":201,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":215,"column":40,"nodeType":"81","messageId":"82","endLine":215,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":217,"column":35,"nodeType":"85","messageId":"86","endLine":217,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":248,"column":26,"nodeType":"85","messageId":"86","endLine":248,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":262,"column":46,"nodeType":"81","messageId":"82","endLine":262,"endColumn":48},{"ruleId":"79","severity":1,"message":"80","line":275,"column":49,"nodeType":"81","messageId":"82","endLine":275,"endColumn":51},{"ruleId":"83","severity":1,"message":"84","line":280,"column":41,"nodeType":"85","messageId":"86","endLine":280,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":343,"column":11,"nodeType":"85","messageId":"86","endLine":343,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":347,"column":37,"nodeType":"85","messageId":"86","endLine":347,"endColumn":39},{"ruleId":"83","severity":1,"message":"84","line":368,"column":25,"nodeType":"85","messageId":"86","endLine":368,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":381,"column":34,"nodeType":"85","messageId":"86","endLine":381,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":382,"column":28,"nodeType":"85","messageId":"86","endLine":382,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":411,"column":38,"nodeType":"85","messageId":"86","endLine":411,"endColumn":40},{"ruleId":"79","severity":1,"message":"80","line":417,"column":48,"nodeType":"81","messageId":"82","endLine":417,"endColumn":50},{"ruleId":"83","severity":1,"message":"84","line":420,"column":38,"nodeType":"85","messageId":"86","endLine":420,"endColumn":40},{"ruleId":"83","severity":1,"message":"84","line":426,"column":38,"nodeType":"85","messageId":"86","endLine":426,"endColumn":40},{"ruleId":"83","severity":1,"message":"84","line":465,"column":38,"nodeType":"85","messageId":"86","endLine":465,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":509,"column":12,"nodeType":"89","endLine":509,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":558,"column":25,"nodeType":"89","endLine":558,"endColumn":140},{"ruleId":"83","severity":1,"message":"84","line":570,"column":72,"nodeType":"85","messageId":"86","endLine":570,"endColumn":74},{"ruleId":"69","severity":1,"message":"90","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":179,"column":17,"nodeType":"89","endLine":179,"endColumn":61},{"ruleId":"83","severity":1,"message":"84","line":74,"column":30,"nodeType":"85","messageId":"86","endLine":74,"endColumn":32},{"ruleId":"69","severity":1,"message":"91","line":78,"column":13,"nodeType":"71","messageId":"72","endLine":78,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":132,"column":9,"nodeType":"94","endLine":132,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":136,"column":30,"nodeType":"85","messageId":"86","endLine":136,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":195,"column":30,"nodeType":"85","messageId":"86","endLine":195,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":238,"column":30,"nodeType":"85","messageId":"86","endLine":238,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":281,"column":31,"nodeType":"85","messageId":"86","endLine":281,"endColumn":33},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'newtempData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'bgc' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]